[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\super\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\super\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 93.079099ms
[debug]       Load.loadUnit: defsScala took 0.2449ms
[debug] [Loading] Scanning directory C:\Users\super\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\super\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.2905 ms
[debug]           Load.resolveProject(global-plugins) took 36.1189ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\super\.sbt\1.0\plugins, plugins: List(<none>))) took 81.466501ms
[debug] [Loading] Done in C:\Users\super\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 105.1521ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.373101ms
[debug]     Load.loadUnit(file:/C:/Users/super/.sbt/1.0/plugins/, ...) took 208.594999ms
[debug]   Load.apply: load took 376.963201ms
[debug]   Load.apply: resolveProjects took 4.838501ms
[debug]   Load.apply: finalTransforms took 66.4822ms
[debug]   Load.apply: config.delegates took 7.1254ms
[debug]   Load.apply: Def.make(settings)... took 1081.2888ms
[debug]   Load.apply: structureIndex took 98.152899ms
[debug]   Load.apply: mkStreams took 1.5821ms
[info] loading global plugins from C:\Users\super\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7320.210901ms
[debug]           Load.loadUnit: plugins took 51.332101ms
[debug]           Load.loadUnit: defsScala took 0.005001ms
[debug] [Loading] Scanning directory G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make\project
[debug]             Load.loadUnit: mkEval took 9.0736ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.198 ms
[info] loading settings for project dist_make-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(dist_make-build) took 17.042401ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dist_make-build, base: G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make\project, plugins: List(<none>))) took 18.7837ms
[debug] [Loading] Done in G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make\project, returning: (dist_make-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2580.2468ms
[debug]           Load.loadUnit: cleanEvalClasses took 100.939199ms
[debug]         Load.loadUnit(file:/G:/Documenti/Università/V%20Anno/Systemes%20distribué/systeme-distribues/dist_make/project/, ...) took 2734.5463ms
[debug]       Load.apply: load took 2739.457ms
[debug]       Load.apply: resolveProjects took 0.3135ms
[debug]       Load.apply: finalTransforms took 83.912499ms
[debug]       Load.apply: config.delegates took 0.3383ms
[debug]       Load.apply: Def.make(settings)... took 101.361001ms
[debug]       Load.apply: structureIndex took 42.1032ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4350.5996ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make
[debug]       Load.loadUnit: mkEval took 0.2302ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.209801 ms
[info] loading settings for project dist_make from build.sbt ...
[debug]         Load.resolveProject(dist_make) took 44.1986ms
[debug]       Load.loadTransitive: finalizeProject(Project(id dist_make, base: G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make, plugins: List(<none>))) took 47.8267ms
[debug] [Loading] Done in G:\Documenti\Università\V Anno\Systemes distribué\systeme-distribues\dist_make, returning: (dist_make)
[debug]     Load.loadUnit: loadedProjectsRaw took 1264.411901ms
[debug]     Load.loadUnit: cleanEvalClasses took 92.4581ms
[debug]   Load.loadUnit(file:/G:/Documenti/Università/V%20Anno/Systemes%20distribué/systeme-distribues/dist_make/, ...) took 5708.604ms
[debug] Load.apply: load took 5714.359199ms
[debug] Load.apply: resolveProjects took 0.1226ms
[debug] Load.apply: finalTransforms took 52.508899ms
[debug] Load.apply: config.delegates took 0.2983ms
[debug] Load.apply: Def.make(settings)... took 78.0475ms
[debug] Load.apply: structureIndex took 23.8603ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to dist_make (in build file:/G:/Documenti/Università/V%20Anno/Systemes%20distribué/systeme-distribues/dist_make/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58022 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58022, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dist_make (in build file:/G:/Documenti/Università/V%20Anno/Systemes%20distribué/systeme-distribues/dist_make/)
[debug] > Exec(idea-shell, None, None)
