[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Sergio\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Sergio\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (AdoptOpenJDK Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 273.7686ms
[debug]       Load.loadUnit: defsScala took 0.7682ms
[debug] [Loading] Scanning directory C:\Users\Sergio\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergio\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 52.6585 ms
[debug]           Load.resolveProject(global-plugins) took 132.5949ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Sergio\.sbt\1.0\plugins, plugins: List(<none>))) took 279.758ms
[debug] [Loading] Done in C:\Users\Sergio\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 350.7573ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6154ms
[debug]     Load.loadUnit(file:/C:/Users/Sergio/.sbt/1.0/plugins/, ...) took 644.9371ms
[debug]   Load.apply: load took 1002.2134ms
[debug]   Load.apply: resolveProjects took 19.0816ms
[debug]   Load.apply: finalTransforms took 143.0944ms
[debug]   Load.apply: config.delegates took 17.9019ms
[debug]   Load.apply: Def.make(settings)... took 2500.9182ms
[debug]   Load.apply: structureIndex took 148.2568ms
[debug]   Load.apply: mkStreams took 2.8579ms
[info] loading global plugins from C:\Users\Sergio\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6661.838ms
[debug]           Load.loadUnit: plugins took 62.4732ms
[debug]           Load.loadUnit: defsScala took 0.0078ms
[debug] [Loading] Scanning directory C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make\project
[debug]             Load.loadUnit: mkEval took 19.0419ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0277 ms
[info] loading settings for project dist_make-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(dist_make-build) took 14.7167ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dist_make-build, base: C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make\project, plugins: List(<none>))) took 18.554ms
[debug] [Loading] Done in C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make\project, returning: (dist_make-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4324.5648ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.7825ms
[debug]         Load.loadUnit(file:/C:/Users/Sergio/Desktop/Progetti_Ensimag/systeme-distribues/dist_make/project/, ...) took 4395.0506ms
[debug]       Load.apply: load took 4397.3874ms
[debug]       Load.apply: resolveProjects took 0.1133ms
[debug]       Load.apply: finalTransforms took 10.2977ms
[debug]       Load.apply: config.delegates took 0.4315ms
[debug]       Load.apply: Def.make(settings)... took 87.3987ms
[debug]       Load.apply: structureIndex took 33.3445ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6429.3882ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make
[debug]       Load.loadUnit: mkEval took 0.3317ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5756 ms
[info] loading settings for project dist_make from build.sbt ...
[debug]         Load.resolveProject(dist_make) took 63.4386ms
[debug]       Load.loadTransitive: finalizeProject(Project(id dist_make, base: C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make, plugins: List(<none>))) took 69.0926ms
[debug] [Loading] Done in C:\Users\Sergio\Desktop\Progetti_Ensimag\systeme-distribues\dist_make, returning: (dist_make)
[debug]     Load.loadUnit: loadedProjectsRaw took 1526.2587ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.782ms
[debug]   Load.loadUnit(file:/C:/Users/Sergio/Desktop/Progetti_Ensimag/systeme-distribues/dist_make/, ...) took 7971.3266ms
[debug] Load.apply: load took 7973.7316ms
[debug] Load.apply: resolveProjects took 0.1272ms
[debug] Load.apply: finalTransforms took 38.8819ms
[debug] Load.apply: config.delegates took 0.4761ms
[debug] Load.apply: Def.make(settings)... took 108.548ms
[debug] Load.apply: structureIndex took 30.9274ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to dist_make (in build file:/C:/Users/Sergio/Desktop/Progetti_Ensimag/systeme-distribues/dist_make/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51858 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51858, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dist_make (in build file:/C:/Users/Sergio/Desktop/Progetti_Ensimag/systeme-distribues/dist_make/)
[debug] > Exec(idea-shell, None, None)
